{"version":3,"sources":["components/Modal/modal.module.css","components/ImageGalleryItem/imageGalleryItem.module.css","components/ImageGallery/imageGallery.module.css","components/Button/button.module.css","App.module.css","services/news-api.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","components/Loader/Loader.js","App.js","index.js","components/Searchbar/searchbar.module.css"],"names":["module","exports","axios","defaults","baseURL","fetchHits","searchQuery","currentPage","get","then","response","data","hits","Searchbar","state","query","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","className","styles","SearchForm","this","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","webformatURL","tags","largeImageURL","src","alt","ImageGallery","onClick","map","id","Button","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","Overlay","children","GalleryLoader","color","height","width","App","currentPageImages","isLoading","error","showModal","url","tag","onChangeQuery","options","newsApi","prevState","length","scrollTo","top","documentElement","scrollHeight","behavior","catch","finally","scrollDown","scrollTop","innerHeight","handleImageClick","nodeName","dataset","toggleModal","prevProps","shouldRenderLoadMoreButton","Container","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cde7884e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"modal_Overlay__1jf9a\",\"Modal\":\"modal_Modal__10xJq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"imageGalleryItem_ImageGalleryItem__xt5gr\",\"ImageGalleryItemImage\":\"imageGalleryItem_ImageGalleryItemImage__J54Sz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"imageGallery_ImageGallery__2GKD0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"button_Button__1DAat\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"App_Container__3Od4z\"};","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://pixabay.com/api/';\nconst KEY = '21824668-10aeb8c8af54ec25684dd6884&';\n\nconst fetchHits = ({ searchQuery = '', currentPage = 1 }) => axios\n    .get(\n        `?q=${searchQuery}&page=${currentPage}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n    )\n    .then((response) => response.data.hits);\n\n   \nexport { fetchHits };\n\n","// Модули\nimport React, { Component } from 'react';\n\n// Стили\nimport styles from '../Searchbar/searchbar.module.css';\n\n\nclass Searchbar extends Component {\n  state = { query: '' };\n\n  handleChange = e => {\n    this.setState({\n      query: e.currentTarget.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.query);\n\n    this.setState({ query: '' });\n  };\n\n  render() {\n    return (\n      <header className={styles.Searchbar}>\n        <form className={styles.SearchForm} onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className={styles.SearchFormButton}>\n            <span className={styles.SearchFormButtonLabel}>Search</span>\n          </button>\n\n          <input\n            className={styles.SearchFormInput}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={this.state.query}\n            onChange={this.handleChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\n\nexport default Searchbar;\n","// Модули\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// Стили\nimport styles from '../ImageGalleryItem/imageGalleryItem.module.css';\n\n\nconst ImageGalleryItem = ({ webformatURL, tags, largeImageURL }) => (\n  <li className={styles.ImageGalleryItem}>\n    <img\n      src={webformatURL}\n      alt={tags}\n      data-url={largeImageURL}\n    />\n  </li>\n);\n\nImageGalleryItem.propTypes = {\n    webformatURL: PropTypes.string.isRequired,\n    tags: PropTypes.string.isRequired,\n    largeImageURL: PropTypes.string.isRequired,\n};\n\n\nexport default ImageGalleryItem;\n","// Модули\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// Компоненты\nimport ImageGalleryItem from '../ImageGalleryItem';\n\n// Стили\nimport styles from '../ImageGallery/imageGallery.module.css';\n\n\nconst ImageGallery = ({ hits, onClick }) => (\n  <ul className={styles.ImageGallery} onClick={onClick}>\n    {hits.map(({ id, webformatURL, largeImageURL, tags }) => (\n      <ImageGalleryItem\n          key={id}\n          webformatURL={webformatURL}\n          tags={tags}\n          largeImageURL={largeImageURL}\n      />\n    ))}\n  </ul>\n);\n\nImageGallery.propTypes = {\n  hits: PropTypes.array.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\n\nexport default ImageGallery;\n","// Модули\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// Стили\nimport styles from './button.module.css';\n\n\nconst Button = ({ onClick }) => (\n  <button type=\"button\" onClick={onClick} className={styles.Button}>\n    Load more\n  </button>\n);\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;","// Модули\nimport React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\n// Стили\nimport styles from './modal.module.css';\n\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        this.props.onClose();\n      }\n  }\n  \n  handleBackdropClick = e => {\n      if (e.currentTarget === e.target) {\n            this.props.onClose();\n      }\n  }\n  \n  render() {\n    return createPortal(\n      <div className={styles.Overlay} onClick={this.handleBackdropClick}>\n        <div className={styles.Modal}>\n          {this.props.children}\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\n\n  Modal.propTypes = {\n    children: PropTypes.node.isRequired,\n    onClose: PropTypes.func.isRequired,\n  };\n\n  \nexport default Modal;\n","// Модули\r\nimport React from 'react';\r\nimport Loader from \"react-loader-spinner\";\r\n\r\n\r\nconst GalleryLoader = () => (\r\n    <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\r\n)\r\n\r\n\r\nexport default GalleryLoader;","// Модули\nimport React, { Component } from 'react';\n\n// Компоненты\nimport * as newsApi from \"./services/news-api\";\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Modal from './components/Modal';\nimport GalleryLoader from './components/Loader'\n\n// Стили\nimport styles from './App.module.css';\n\n\nclass App extends Component {\n  state = {\n    hits: [],\n    currentPage: 1,\n    currentPageImages: [],\n    searchQuery: '',\n    isLoading: false,\n    error: null,\n    showModal: false,\n    url: '',\n    tag: '',\n    \n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchHits();\n    }\n  }\n\n  onChangeQuery = query => {\n    this.setState({\n      searchQuery: query,\n      currentPage: 1,\n      hits: [],\n      error: null,\n      url: '',\n      tag: '',\n    });\n  };\n\n\n    fetchHits = () => {\n    const { searchQuery, currentPage } = this.state;\n    const options = { searchQuery, currentPage };\n    this.setState({ isLoading: true });\n    newsApi\n    .fetchHits(options)\n    .then(hits => {\n      this.setState( prevState => ({\n        hits: [...prevState.hits, ...hits], \n        currentPage: prevState.currentPage + 1,\n        currentPageImages: [...hits], \n      }));\n      if (hits.length === 0) {\n          this.setState({\n            error: 'Nothing was find by your query. Try again.',});\n      }})\n      .then(() => {\n                window.scrollTo({\n                  top: document.documentElement.scrollHeight,\n                  behavior: 'smooth',\n                })\n              })\n    .catch(error => this.setState({ error }))\n    .finally(() => this.setState({ isLoading: false }));\n  };\n\n  fetchHits = () => {\n    const { searchQuery, currentPage } = this.state;\n    const options = { searchQuery, currentPage };\n\n    this.setState({ isLoading: true });\n\n    newsApi\n      .fetchHits(options)\n      .then((hits) => {\n        this.setState((prevState) => ({\n          hits: [...prevState.hits, ...hits],\n          currentPage: prevState.currentPage + 1,\n        }));\n        this.scrollDown();\n      })\n      .catch((error) => this.setState({ error }))\n      .finally(() => this.setState({ isLoading: false }));\n  };\n \n  scrollDown = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollTop + window.innerHeight,\n      behavior: \"smooth\",\n    });\n  };\n\n  handleImageClick = ({ target }) => {\n    if (target.nodeName !== 'IMG') {\n      return;\n    }\n    const { url } = target.dataset;\n    const tag = target.alt;\n    this.setState({\n      url,\n      tag,\n    });\n    this.toggleModal();\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal\n    }))\n  };\n\n  render() {\n    const { hits, isLoading, showModal, url, tag } = this.state;\n    const shouldRenderLoadMoreButton = hits.length > 0 && !isLoading;\n\n    return (\n      <div className={styles.Container}>\n        <Searchbar onSubmit={this.onChangeQuery} />\n\n        <ImageGallery hits={hits} onClick={this.handleImageClick} />\n\n        {isLoading && <GalleryLoader />}\n\n        {shouldRenderLoadMoreButton && <Button onClick={this.fetchHits} />}\n       \n        {showModal && (\n          <Modal onClose={this.toggleModal} onClick={this.handleImageClick}>\n            <img src={url} alt={tag}  />   \n          </Modal>)}\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","// Модули\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Компоненты\nimport App from './App';\n\n// Стили\nimport 'modern-normalize/modern-normalize.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"searchbar_Searchbar__1mswQ\",\"SearchForm\":\"searchbar_SearchForm__EnCsG\",\"SearchFormButton\":\"searchbar_SearchFormButton__3_7Cc\",\"SearchFormButtonLabel\":\"searchbar_SearchFormButtonLabel__Tx2Ht\",\"SearchFormInput\":\"searchbar_SearchFormInput__2ar8V\"};"],"sourceRoot":""}